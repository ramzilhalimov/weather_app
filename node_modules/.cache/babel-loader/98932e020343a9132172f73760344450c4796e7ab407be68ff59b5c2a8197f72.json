{"ast":null,"code":"var _jsxFileName = \"/Users/user/weather_app/src/components/WeekContainer/WeekContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card/Card\";\nimport \"./WeekContainer.css\";\nimport { getWeatherData } from \"./weatherAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeekContainer = () => {\n  _s();\n  const [days, setDays] = useState([]);\n  const [city, setCity] = useState(\"Ufa\");\n  useEffect(() => {\n    const weatherURL = \"https://api.openweathermap.org/data/2.5/forecast?q=Kiev&lang=ru&units=metric&APPID=a9a3a62789de80865407c0452e9d1c27\";\n    const fetchData = async () => {\n      const data = await getWeatherData(city); // Используем вашу функцию для запроса данных\n      if (data) {\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"));\n        setDays(dailyData);\n      }\n    };\n    fetchData(); // Запускаем функцию получения данных\n  }, [city]);\n  const formatCards = () => {\n    return days.map((day, index) => /*#__PURE__*/_jsxDEV(Card, {\n      day: day\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 37\n    }, this));\n  };\n  const handleCityChange = event => {\n    setCity(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-4 jumbotron\",\n      children: \"\\u041F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B \\u043D\\u0430 5 \\u0434\\u043D\\u0435\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: handleCityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(\"Запрос на\", city),\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-content-center\",\n      children: formatCards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(WeekContainer, \"1/2SZrV9CyI3JKtqnjDuohr8iVY=\");\n_c = WeekContainer;\nvar _c;\n$RefreshReg$(_c, \"WeekContainer\");","map":{"version":3,"names":["React","useState","useEffect","Card","getWeatherData","jsxDEV","_jsxDEV","WeekContainer","_s","days","setDays","city","setCity","weatherURL","fetchData","data","dailyData","list","filter","reading","dt_txt","includes","formatCards","map","day","index","fileName","_jsxFileName","lineNumber","columnNumber","handleCityChange","event","target","value","className","children","type","onChange","onClick","console","log","_c","$RefreshReg$"],"sources":["/Users/user/weather_app/src/components/WeekContainer/WeekContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card/Card\";\nimport \"./WeekContainer.css\";\nimport { getWeatherData } from \"./weatherAPI\";\n\nexport const WeekContainer = () => {\n  const [days, setDays] = useState([]);\n  const [city, setCity] = useState(\"Ufa\");\n  useEffect(() => {\n    const weatherURL =\n      \"https://api.openweathermap.org/data/2.5/forecast?q=Kiev&lang=ru&units=metric&APPID=a9a3a62789de80865407c0452e9d1c27\";\n\n    const fetchData = async () => {\n      const data = await getWeatherData(city); // Используем вашу функцию для запроса данных\n      if (data) {\n        const dailyData = data.list.filter((reading) =>\n          reading.dt_txt.includes(\"12:00:00\")\n        );\n        setDays(dailyData);\n      }\n    };\n\n    fetchData(); // Запускаем функцию получения данных\n  }, [city]);\n  const formatCards = () => {\n    return days.map((day, index) => <Card day={day} key={index} />);\n  };\n\n  const handleCityChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  return (\n    <div className=\"\">\n      <h1 className=\"display-4 jumbotron\">Прогноз погоды на 5 дней</h1>\n      <input type=\"text\" value={city} onChange={handleCityChange} />\n      <button onClick={() => console.log(\"Запрос на\", city)}>\n        Получить прогноз\n      </button>\n      <div className=\"justify-content-center\">{formatCards()}</div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAO,qBAAqB;AAC5B,SAASC,cAAc,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvCC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GACd,qHAAqH;IAEvH,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,IAAI,GAAG,MAAMX,cAAc,CAACO,IAAI,CAAC,CAAC,CAAC;MACzC,IAAII,IAAI,EAAE;QACR,MAAMC,SAAS,GAAGD,IAAI,CAACE,IAAI,CAACC,MAAM,CAAEC,OAAO,IACzCA,OAAO,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,CACpC,CAAC;QACDX,OAAO,CAACM,SAAS,CAAC;MACpB;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EACV,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,OAAOb,IAAI,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAAKnB,OAAA,CAACH,IAAI;MAACqB,GAAG,EAAEA;IAAI,GAAMC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClCnB,OAAO,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACf7B,OAAA;MAAI4B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAwB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjEvB,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACH,KAAK,EAAEtB,IAAK;MAAC0B,QAAQ,EAAEP;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DvB,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE7B,IAAI,CAAE;MAAAwB,QAAA,EAAC;IAEvD;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTvB,OAAA;MAAK4B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAEb,WAAW,CAAC;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACrB,EAAA,CArCWD,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}