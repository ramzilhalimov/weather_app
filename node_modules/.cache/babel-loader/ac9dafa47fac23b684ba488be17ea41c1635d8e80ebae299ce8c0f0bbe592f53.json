{"ast":null,"code":"import axios from \"axios\";\nconst apiKey = \"f4ed7d4b0f6b64da809a93b6850cb852\";\nexport const getWeatherData = async city => {\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&lang=ru&units=metric&appid=${apiKey}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // обработка ошибок\n    } else if (error.request) {\n      // обработка ошибок\n    } else {\n      // обработка ошибок\n    }\n    // обработка ошибок\n  }\n};\nexport const getCurrentWeather = async city => {\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&lang=ru&units=metric&appid=${apiKey}`);\n    return {\n      temperature: response.data.main.temp\n      // Другие свойства текущей погоды\n    };\n  } catch (error) {\n    console.error(\"Ошибка получения данных о текущей погоде\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","apiKey","getWeatherData","city","response","get","data","error","request","getCurrentWeather","temperature","main","temp","console"],"sources":["/Users/user/weather_app/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst apiKey = \"f4ed7d4b0f6b64da809a93b6850cb852\";\n\nexport const getWeatherData = async (city) => {\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&lang=ru&units=metric&appid=${apiKey}`\n    );\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // обработка ошибок\n    } else if (error.request) {\n      // обработка ошибок\n    } else {\n      // обработка ошибок\n    }\n    // обработка ошибок\n  }\n};\nexport const getCurrentWeather = async (city) => {\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&lang=ru&units=metric&appid=${apiKey}`\n    );\n    return {\n      temperature: response.data.main.temp,\n      // Другие свойства текущей погоды\n    };\n  } catch (error) {\n    console.error(\"Ошибка получения данных о текущей погоде\", error);\n    return null;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,kCAAkC;AAEjD,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC7B,sDAAqDF,IAAK,+BAA8BF,MAAO,EAClG,CAAC;IACD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClB;IAAA,CACD,MAAM,IAAIG,KAAK,CAACC,OAAO,EAAE;MACxB;IAAA,CACD,MAAM;MACL;IAAA;IAEF;EACF;AACF,CAAC;AACD,OAAO,MAAMC,iBAAiB,GAAG,MAAON,IAAI,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC7B,sDAAqDF,IAAK,+BAA8BF,MAAO,EAClG,CAAC;IACD,OAAO;MACLS,WAAW,EAAEN,QAAQ,CAACE,IAAI,CAACK,IAAI,CAACC;MAChC;IACF,CAAC;EACH,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAChE,OAAO,IAAI;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}