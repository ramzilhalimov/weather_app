{"ast":null,"code":"var _jsxFileName = \"/Users/user/weather_app/src/components/WeekContainer/WeekContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card/Card\";\nimport \"./WeekContainer.css\";\nimport { getWeatherData } from \"../../api\";\nimport { getCurrentWeather } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeekContainer = () => {\n  _s();\n  const [days, setDays] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [city, setCity] = useState(\"Ufa\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [weatherData, currentWeatherData] = await Promise.all([getWeatherData(city),\n        // получаем прогноз на 5 дней\n        getCurrentWeather(city) // получаем текущую погоду\n        ]);\n        console.log(object);\n        if (weatherData && weatherData.list) {\n          const dailyData = weatherData.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"));\n          setDays(dailyData);\n        } else {\n          throw new Error(\"Failed to fetch weather data\");\n        }\n        if (currentWeatherData) {\n          setCurrentWeather(currentWeatherData);\n        }\n      } catch (error) {\n        console.error(\"Произошла ошибка при получении данных о погоде\", error);\n      }\n    };\n    fetchData();\n  }, [city]);\n  const formatCards = () => {\n    return days.map((day, index) => /*#__PURE__*/_jsxDEV(Card, {\n      day: day\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }, this));\n  };\n  const handleCityChange = event => {\n    setCity(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: handleCityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(\"Запрос на\", city),\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0430\\u044F \\u043F\\u043E\\u0433\\u043E\\u0434\\u0430 \\u0432 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0435 \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430: \", currentWeather.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435:\", \" \", currentWeather.weather && currentWeather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"display-4 jumbotron\",\n      children: \"\\u041F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B \\u043D\\u0430 5 \\u0434\\u043D\\u0435\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-content-center\",\n      children: formatCards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(WeekContainer, \"n0SsRrh7IOAg4Ca/srv+QWKz+Z8=\");\n_c = WeekContainer;\nvar _c;\n$RefreshReg$(_c, \"WeekContainer\");","map":{"version":3,"names":["React","useState","useEffect","Card","getWeatherData","getCurrentWeather","jsxDEV","_jsxDEV","WeekContainer","_s","days","setDays","currentWeather","setCurrentWeather","city","setCity","fetchData","weatherData","currentWeatherData","Promise","all","console","log","object","list","dailyData","filter","reading","dt_txt","includes","Error","error","formatCards","map","day","index","fileName","_jsxFileName","lineNumber","columnNumber","handleCityChange","event","target","value","className","children","type","onChange","onClick","temp","weather","description","_c","$RefreshReg$"],"sources":["/Users/user/weather_app/src/components/WeekContainer/WeekContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card/Card\";\nimport \"./WeekContainer.css\";\nimport { getWeatherData } from \"../../api\";\nimport { getCurrentWeather } from \"../../api\";\n\nexport const WeekContainer = () => {\n  const [days, setDays] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [city, setCity] = useState(\"Ufa\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [weatherData, currentWeatherData] = await Promise.all([\n          getWeatherData(city), // получаем прогноз на 5 дней\n          getCurrentWeather(city), // получаем текущую погоду\n        ]);\nconsole.log(object);\n        if (weatherData && weatherData.list) {\n          const dailyData = weatherData.list.filter((reading) =>\n            reading.dt_txt.includes(\"12:00:00\")\n          );\n          setDays(dailyData);\n        } else {\n          throw new Error(\"Failed to fetch weather data\");\n        }\n\n        if (currentWeatherData) {\n          setCurrentWeather(currentWeatherData);\n        }\n      } catch (error) {\n        console.error(\"Произошла ошибка при получении данных о погоде\", error);\n      }\n    };\n    fetchData();\n  }, [city]);\n\n  const formatCards = () => {\n    return days.map((day, index) => <Card day={day} key={index} />);\n  };\n\n  const handleCityChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  return (\n    <div className=\"\">\n      <input type=\"text\" value={city} onChange={handleCityChange} />\n      <button onClick={() => console.log(\"Запрос на\", city)}>\n        Получить прогноз\n      </button>\n      {currentWeather && (\n        <div>\n          <h2>Текущая погода в городе {city}</h2>\n          <p>Температура: {currentWeather.temp} °C</p>\n          <p>\n            Описание:{\" \"}\n            {currentWeather.weather && currentWeather.weather[0].description}\n          </p>\n        </div>\n      )}\n      <h2 className=\"display-4 jumbotron\">Прогноз погоды на 5 дней</h2>\n      <div className=\"justify-content-center\">{formatCards()}</div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}