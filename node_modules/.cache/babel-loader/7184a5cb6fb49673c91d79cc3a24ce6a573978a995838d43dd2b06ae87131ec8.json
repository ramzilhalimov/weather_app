{"ast":null,"code":"import axios from \"axios\";\nconst apiKey = \"f4ed7d4b0f6b64da809a93b6850cb852\";\nexport const getWeatherData = async city => {\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&lang=ru&units=metric&appid=${apiKey}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error(\"Error with response data:\", error.response.data);\n    } else if (error.request) {\n      console.error(\"Error with request:\", error.request);\n    } else {\n      console.error(\"Error:\", error.message);\n    }\n    throw new Error(\"Failed to fetch weather data\");\n  }\n};\nexport const getCurrentWeather = async city => {\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=ru&units=metric&appid=${apiKey}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error(\"Error with response data:\", error.response.data);\n    } else if (error.request) {\n      console.error(\"Error with request:\", error.request);\n    } else {\n      console.error(\"Error:\", error.message);\n    }\n    throw new Error(\"Failed to fetch current weather data\");\n  }\n};","map":{"version":3,"names":["axios","apiKey","getWeatherData","city","response","get","data","error","console","request","message","Error","getCurrentWeather"],"sources":["/Users/user/weather_app/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst apiKey = \"f4ed7d4b0f6b64da809a93b6850cb852\";\n\nexport const getWeatherData = async (city) => {\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&lang=ru&units=metric&appid=${apiKey}`\n    );\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error(\"Error with response data:\", error.response.data);\n    } else if (error.request) {\n      console.error(\"Error with request:\", error.request);\n    } else {\n      console.error(\"Error:\", error.message);\n    }\n    throw new Error(\"Failed to fetch weather data\");\n  }\n};\n\nexport const getCurrentWeather = async (city) => {\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=ru&units=metric&appid=${apiKey}`\n    );\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error(\"Error with response data:\", error.response.data);\n    } else if (error.request) {\n      console.error(\"Error with request:\", error.request);\n    } else {\n      console.error(\"Error:\", error.message);\n    }\n    throw new Error(\"Failed to fetch current weather data\");\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,kCAAkC;AAEjD,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC7B,sDAAqDF,IAAK,+BAA8BF,MAAO,EAClG,CAAC;IACD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClBI,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IACjE,CAAC,MAAM,IAAIC,KAAK,CAACE,OAAO,EAAE;MACxBD,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACrD,CAAC,MAAM;MACLD,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACG,OAAO,CAAC;IACxC;IACA,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOT,IAAI,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC7B,qDAAoDF,IAAK,+BAA8BF,MAAO,EACjG,CAAC;IACD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClBI,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IACjE,CAAC,MAAM,IAAIC,KAAK,CAACE,OAAO,EAAE;MACxBD,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACrD,CAAC,MAAM;MACLD,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACG,OAAO,CAAC;IACxC;IACA,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EACzD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}