{"ast":null,"code":"import axios from \"axios\";\nconst apiKey = \"f4ed7d4b0f6b64da809a93b6850cb852\";\nexport const getWeatherData = async city => {\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log(\"Error\", error.message);\n    }\n    console.error(\"Failed to fetch weather data\", error);\n    throw new Error(\"Failed to fetch weather data\");\n  }\n};","map":{"version":3,"names":["axios","apiKey","getWeatherData","city","response","get","data","error","console","log","status","headers","request","message","Error"],"sources":["/Users/user/weather_app/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst apiKey = \"f4ed7d4b0f6b64da809a93b6850cb852\";\n\nexport const getWeatherData = async (city) => {\n  try {\n    const response = await axios.get(\n    `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}`\n    );\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log(\"Error\", error.message);\n    }\n    console.error(\"Failed to fetch weather data\", error);\n    throw new Error(\"Failed to fetch weather data\");\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,kCAAkC;AAEjD,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC/B,sDAAqDF,IAAK,UAASF,MAAO,EAC3E,CAAC;IACD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClB;MACA;MACAI,OAAO,CAACC,GAAG,CAACF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;MAChCE,OAAO,CAACC,GAAG,CAACF,KAAK,CAACH,QAAQ,CAACM,MAAM,CAAC;MAClCF,OAAO,CAACC,GAAG,CAACF,KAAK,CAACH,QAAQ,CAACO,OAAO,CAAC;IACrC,CAAC,MAAM,IAAIJ,KAAK,CAACK,OAAO,EAAE;MACxB;MACAJ,OAAO,CAACC,GAAG,CAACF,KAAK,CAACK,OAAO,CAAC;IAC5B,CAAC,MAAM;MACL;MACAJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAACM,OAAO,CAAC;IACrC;IACAL,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAM,IAAIO,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}