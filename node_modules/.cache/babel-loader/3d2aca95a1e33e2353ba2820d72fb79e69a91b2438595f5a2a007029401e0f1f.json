{"ast":null,"code":"var _jsxFileName = \"/Users/user/weather_app/src/components/WeekContainer/WeekContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card/Card\";\nimport \"./WeekContainer.css\";\nimport { getCurrentWeather, getWeatherData } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeekContainer = () => {\n  _s();\n  var _currentWeather$main;\n  const [days, setDays] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [city, setCity] = useState(\"Ufa\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [weatherData, currentWeatherData] = await Promise.all([getWeatherData(city), getCurrentWeather(city)]);\n        console.log(\"currentWeatherData:\", currentWeatherData);\n        if (weatherData && weatherData.list) {\n          const dailyData = weatherData.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"));\n          setDays(dailyData);\n        } else {\n          throw new Error(\"Failed to fetch weather data\");\n        }\n        if (currentWeatherData) {\n          setCurrentWeather(currentWeatherData);\n        }\n      } catch (error) {\n        console.error(\"Произошла ошибка при получении данных о погоде\", error);\n      }\n    };\n    fetchData();\n  }, [city]);\n  const formatCards = () => {\n    return days.map((day, index) => /*#__PURE__*/_jsxDEV(Card, {\n      day: day\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }, this));\n  };\n  const weatherIconCode = currentWeather === null || currentWeather === void 0 ? void 0 : currentWeather.weather[0].icon;\n  const iconURL = `https://openweathermap.org/img/wn/${weatherIconCode}.png`;\n  const handleCityChange = event => {\n    setCity(event.target.value);\n  };\n  const temperatureBar = в.map((temp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temperature-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [temp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"header-input\",\n      type: \"text\",\n      value: city,\n      onChange: handleCityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"header-button\",\n      onClick: () => console.log(\"Запрос на\", city),\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"current-section-name\",\n        children: \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0430\\u044F \\u043F\\u043E\\u0433\\u043E\\u0434\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-image\",\n        alt: \"weather\",\n        src: iconURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430: \", Math.round((_currentWeather$main = currentWeather.main) === null || _currentWeather$main === void 0 ? void 0 : _currentWeather$main.temp), \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0432\\u0435\\u0442\\u0440\\u0430: \", currentWeather.wind.speed, \" \\u043C/c\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0412\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C: \", currentWeather.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u043E\\u0433\\u043E\\u0434\\u043D\\u044B\\u0435 \\u0443\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F: \", currentWeather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature-scale\",\n      children: temperatureBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"content-section-name\",\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B \\u043D\\u0430 5 \\u0434\\u043D\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"justify-content-center\",\n        children: formatCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(WeekContainer, \"n0SsRrh7IOAg4Ca/srv+QWKz+Z8=\");\n_c = WeekContainer;\nvar _c;\n$RefreshReg$(_c, \"WeekContainer\");","map":{"version":3,"names":["React","useState","useEffect","Card","getCurrentWeather","getWeatherData","jsxDEV","_jsxDEV","WeekContainer","_s","_currentWeather$main","days","setDays","currentWeather","setCurrentWeather","city","setCity","fetchData","weatherData","currentWeatherData","Promise","all","console","log","list","dailyData","filter","reading","dt_txt","includes","Error","error","formatCards","map","day","index","fileName","_jsxFileName","lineNumber","columnNumber","weatherIconCode","weather","icon","iconURL","handleCityChange","event","target","value","temperatureBar","в","temp","className","children","type","onChange","onClick","alt","src","Math","round","main","wind","speed","humidity","description","_c","$RefreshReg$"],"sources":["/Users/user/weather_app/src/components/WeekContainer/WeekContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card/Card\";\nimport \"./WeekContainer.css\";\nimport { getCurrentWeather, getWeatherData } from \"../../api\";\n\nexport const WeekContainer = () => {\n  const [days, setDays] = useState([]);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [city, setCity] = useState(\"Ufa\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [weatherData, currentWeatherData] = await Promise.all([\n          getWeatherData(city),\n          getCurrentWeather(city),\n        ]);\n        console.log(\"currentWeatherData:\", currentWeatherData);\n        if (weatherData && weatherData.list) {\n          const dailyData = weatherData.list.filter((reading) =>\n            reading.dt_txt.includes(\"12:00:00\")\n          );\n          setDays(dailyData);\n        } else {\n          throw new Error(\"Failed to fetch weather data\");\n        }\n\n        if (currentWeatherData) {\n          setCurrentWeather(currentWeatherData);\n        }\n      } catch (error) {\n        console.error(\"Произошла ошибка при получении данных о погоде\", error);\n      }\n    };\n    fetchData();\n  }, [city]);\n\n  const formatCards = () => {\n    return days.map((day, index) => <Card day={day} key={index} />);\n  };\n  const weatherIconCode = currentWeather?.weather[0].icon;\n  const iconURL = `https://openweathermap.org/img/wn/${weatherIconCode}.png`;\n\n  const handleCityChange = (event) => {\n    setCity(event.target.value);\n  };\n\n\n\n  const temperatureBar = в.map((temp, index) => (\n    <div key={index} className=\"temperature-bar\">\n      <p>{temp}°C</p>\n    </div>\n  ));\n\n  return (\n    <div className=\"header\">\n      <input\n        className=\"header-input\"\n        type=\"text\"\n        value={city}\n        onChange={handleCityChange}\n      />\n      <button\n        className=\"header-button\"\n        onClick={() => console.log(\"Запрос на\", city)}\n      >\n        Получить прогноз\n      </button>\n      {currentWeather && (\n        <div className=\"current-section\">\n          <h2 className=\"current-section-name\">Текущая погода:</h2>\n          <img className=\"card-image\" alt=\"weather\" src={iconURL} />\n          <p>Температура: {Math.round(currentWeather.main?.temp)} °C</p>\n          <p>Скорость ветра: {currentWeather.wind.speed} м/c</p>\n          <p>Влажность: {currentWeather.main.humidity}%</p>\n          <p>Погодные условия: {currentWeather.weather[0].description}</p>\n        </div>\n      )}\n      <div className=\"temperature-scale\">{temperatureBar}</div>\n\n      <div className=\"content-section\">\n        <h2 className=\"content-section-name\">Прогноз погоды на 5 дней</h2>\n        <div className=\"justify-content-center\">{formatCards()}</div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}